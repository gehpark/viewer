Determining if the Q_WS_X11 exist failed with the following output:
Change Dir: /Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3125675517/fast"
/usr/bin/make -f CMakeFiles/cmTryCompileExec3125675517.dir/build.make CMakeFiles/cmTryCompileExec3125675517.dir/build
/opt/local/bin/cmake -E cmake_progress_report /Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec3125675517.dir/CheckSymbolExists.cxx.o
/usr/bin/c++    -F/Library/Frameworks    -o CMakeFiles/cmTryCompileExec3125675517.dir/CheckSymbolExists.cxx.o -c /Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx
/Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:8:19: error: use of undeclared identifier 'Q_WS_X11'
  return ((int*)(&Q_WS_X11))[argc];
                  ^
1 error generated.
make[1]: *** [CMakeFiles/cmTryCompileExec3125675517.dir/CheckSymbolExists.cxx.o] Error 1
make: *** [cmTryCompileExec3125675517/fast] Error 2

File /Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:
/* */
#include <QtCore/qglobal.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef Q_WS_X11
  return ((int*)(&Q_WS_X11))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the Q_WS_WIN exist failed with the following output:
Change Dir: /Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2309815976/fast"
/usr/bin/make -f CMakeFiles/cmTryCompileExec2309815976.dir/build.make CMakeFiles/cmTryCompileExec2309815976.dir/build
/opt/local/bin/cmake -E cmake_progress_report /Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec2309815976.dir/CheckSymbolExists.cxx.o
/usr/bin/c++    -F/Library/Frameworks    -o CMakeFiles/cmTryCompileExec2309815976.dir/CheckSymbolExists.cxx.o -c /Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx
/Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:8:19: error: use of undeclared identifier 'Q_WS_WIN'
  return ((int*)(&Q_WS_WIN))[argc];
                  ^
1 error generated.
make[1]: *** [CMakeFiles/cmTryCompileExec2309815976.dir/CheckSymbolExists.cxx.o] Error 1
make: *** [cmTryCompileExec2309815976/fast] Error 2

File /Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:
/* */
#include <QtCore/qglobal.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef Q_WS_WIN
  return ((int*)(&Q_WS_WIN))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the Q_WS_QWS exist failed with the following output:
Change Dir: /Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec4095743014/fast"
/usr/bin/make -f CMakeFiles/cmTryCompileExec4095743014.dir/build.make CMakeFiles/cmTryCompileExec4095743014.dir/build
/opt/local/bin/cmake -E cmake_progress_report /Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec4095743014.dir/CheckSymbolExists.cxx.o
/usr/bin/c++    -F/Library/Frameworks    -o CMakeFiles/cmTryCompileExec4095743014.dir/CheckSymbolExists.cxx.o -c /Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx
/Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:8:19: error: use of undeclared identifier 'Q_WS_QWS'
  return ((int*)(&Q_WS_QWS))[argc];
                  ^
1 error generated.
make[1]: *** [CMakeFiles/cmTryCompileExec4095743014.dir/CheckSymbolExists.cxx.o] Error 1
make: *** [cmTryCompileExec4095743014/fast] Error 2

File /Users/graceparkssd/Desktop/viewer/build_m32/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:
/* */
#include <QtCore/qglobal.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef Q_WS_QWS
  return ((int*)(&Q_WS_QWS))[argc];
#else
  (void)argc;
  return 0;
#endif
}

